generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model has been renamed to 'Renamedclass' during introspection, because the original name 'class' is reserved.
model Renamedclass {
  id                                                   Int             @id
  uc_id                                                Int?
  weekday                                              Int?
  start_time                                           String          @db.VarChar(10)
  end_time                                             String          @db.VarChar(10)
  local                                                String?         @db.VarChar(100)
  type                                                 Int?
  shift                                                Int?
  uc                                                   uc?             @relation(fields: [uc_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student_class                                        student_class[]
  fromSwitch                                           Renamedswitch[] @relation("class_from_id")
  toSwitch                                             Renamedswitch[] @relation("class_to_id")

  @@map("class")
}

model student {
  id                                           Int             @id
  number                                       String?         @db.VarChar(20) @unique
  firstname                                    String?         @db.VarChar(100)
  lastname                                     String?         @db.VarChar(100)
  email                                        String?         @db.VarChar(100)
  password                                     String?         @db.VarChar(100)
  is_admin                                     Boolean?
  student_class                                student_class[]
  renamedSwitch                                Renamedswitch[]
}

model student_class {
  id           Int           @id
  student_id   Int?
  class_id     Int?
  Renamedclass Renamedclass? @relation(fields: [class_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student      student?      @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

}

/// This model has been renamed to 'Renamedswitch' during introspection, because the original name 'switch' is reserved.
model Renamedswitch {
  id                                                  Int              @id @default(autoincrement())
  student_id                                          Int
  class_from_id                                       Int
  class_to_id                                         Int
  status                                              Status?
  publish_time                                        DateTime          
  close_time                                          DateTime
  classFrom                                           Renamedclass @relation("class_from_id", fields: [class_from_id], references: [id])
  classTo                                             Renamedclass @relation("class_to_id", fields: [class_to_id], references: [id])
  student                                             student @relation(fields: [student_id], references: [id])

  @@map("switch")
}

model uc {
  id           Int            @id
  name         String?        @db.VarChar(100)
  year         Int?
  semester     Int?
  Renamedclass Renamedclass[]
}


enum Status {
  REMOVED
  PENDING
  ACCEPTED
}